version: '3'
#  docker-compose down --volumes

services:

  postgres-ticket:
    image: postgres:14.1
    container_name: postgres-ticket
    env_file:
      - build/docker/ticket/dev.ticket.database.env
    volumes:
      - ./ticket/migrations/ddl.init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./db_data/ticket:/var/lib/postgresql/data
    ports:
      - "5556:5432"
    healthcheck:
      test: "pg_isready -q -U postgres"

  ticket-app:
    #    image: ticket-service-server:latest
    container_name: ticket-app
    build:
      context: .
      dockerfile: ./build/docker/ticket/Dockerfile
    environment:
      - CONFIG=docker
    ports:
      - "5001:5001"
      - "8081:8081"
    depends_on:
      postgres-ticket:
        condition: service_healthy

  redis:
    image: redis:6
    container_name: ts_redis
    ports:
      - "6379:6379"
#    restart: always

  pgadmin:
#    http://localhost:15432/browser/
    image: dpage/pgadmin4:6.3
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "15432:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      #        - postgres-customer,
      #        - postgres-photo,
      - postgres-ticket

#  postgres-customer: &customer_db
#    image: postgres:14.1
#    container_name: postgres-customer
#    volumes:
#      - ./customer/migrations/ddl.init.sql:/docker-entrypoint-initdb.d/init.sql
#    env_file:
#      - build/docker/customer/dev.customer.database.env
#    ports:
#      - "5555:5432"
#  api-service:
##    image: ticket-api-service:latest
#    container_name: api-service
#    build:
#      context: .
#      dockerfile: ./build/docker/api-service/Dockerfile
#    ports:
#      - "12300:12300/tcp"

#  postgres-photo:
#    image: postgres:14.1
#    container_name: postgres-photo
#    env_file:
#      - build/docker/photo/dev.photo.database.env
#    volumes:
#      - ./photo/migrations/ddl.init.sql:/docker-entrypoint-initdb.d/init.sql
#    ports:
#      - "5557:5432"

#  postgres-test:
#    <<: *customer_db
#    container_name: postgres-test
#    ports:
#      - "5558:5432/tcp"

volumes:
  #  postgres:
  pgadmin:
