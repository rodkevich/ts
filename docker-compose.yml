version: '3'
#  docker-compose down --volumes

services:

  postgres-customer: &customer_db
    image: postgres:latest
    container_name: postgres-customer
    volumes:
      - ./customer/migrations/ddl.init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - build/docker/customer/dev.customer.database.env
    ports:
      - "5555:5432/tcp"

  postgres-ticket:
    image: postgres:latest
    container_name: postgres-ticket
    env_file:
      - build/docker/ticket/dev.ticket.database.env
    volumes:
      - ./ticket/migrations/ddl.init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5556:5432/tcp"

  postgres-photo:
    image: postgres:latest
    container_name: postgres-photo
    env_file:
      - build/docker/photo/dev.photo.database.env
    volumes:
      - ./photo/migrations/ddl.init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5557:5432/tcp"

  ticket-service:
    container_name: ticket-service
    build:
      context: .
      dockerfile: ./build/docker/ticket/Dockerfile

#  postgres-test:
#    <<: *customer_db
#    container_name: postgres-test
#    ports:
#      - "5558:5432/tcp"

# docker-compose up --scale postgres-customer=2
# docker run -it -p 27017:27017 --name mongo mongo:4 mongo
# MONGO_URI=mongodb://127.0.0.1:27217/bpm ./cbpm-backend
# docker run -p 27217:27017 --name dev-mongo -v -d mongo
